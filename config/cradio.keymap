// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

// (left|right) (norwegian|english) (1|2)
#define _HOME 0
#define _RN1 1
#define _LN1 2
#define _N2 3
#define _NOP 4

// (left|right) (norwegian|english) (home|thumb) row mods
#define LNH(k1,k2,k3,k4) &lht LALT k1  &lht LGUI k2  &lht LCTRL k3  &llt _RN1 k4
#define RNH(k1,k2,k3,k4) &rlt _LN1 k1  &rht LCTRL k2  &rht LGUI k3  &rht LALT k4
#define LNT(k1,k2) &lht LSHIFT k1  &llt _N2 k2
#define RNT(k1,k2) &rlt _N2 k1 &rht LSHIFT k2

/ {
    behaviors {
        llt: left_layer_tap {
            label = "left_layer_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&mo>, <&kp>;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 32 33>;
        };
        rlt: right_layer_tap {
            label = "right_layer_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&mo>, <&kp>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31>;
        };
        lht: left_hold_tap {
            label = "left_hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 32 33>;
        };
        rht: right_hold_tap {
            label = "right_hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31>;
        };
    };

    combos {
        compatible = "zmk,combos";
        combo_lock {
            timeout-ms = <50>;
            key-positions = <0 1 2>;
            bindings = <&to _NOP>;
            layers = <0>;
        };
        combo_unlock {
            timeout-ms = <50>;
            key-positions = <0 1 2>;
            bindings = <&to _HOME>;
            layers = <5>;
        };
    };

    macros {
        no_caret: no_caret {
            label = "no_caret";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp RBRC &kp RBRC>;
        };
        en_caret: en_caret {
            label = "en_caret";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp LS(N6) &kp LS(N6)>;
        };
        no_grave: no_grave {
            label = "no_grave";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp LS(EQUAL) &kp LS(EQUAL)>;
        };
        en_grave: en_grave {
            label = "en_grave";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp GRAVE &kp GRAVE>;
        };
        no_tilde: no_tilde {
            label = "no_tilde";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp RA(RBKT) &kp RA(RBKT)>;
        };
        en_tilde: en_tilde {
            label = "en_tilde";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp LS(GRAVE) &kp LS(GRAVE)>;
        };
        no_acute: no_acute {
            label = "no_acute";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp RA(EQUAL) &kp RA(EQUAL)>;
        };
        en_acute: en_acute {
            label = "en_acute";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp SQT &kp SQT>;
        };
        no_umlaut: no_umlaut {
            label = "no_umlaut";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp RA(LBKT) &kp RA(LBKT)>;
        };
        en_umlaut: en_umlaut {
            label = "en_umlaut";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp DQT &kp DQT>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
        home_layer {
            bindings = <
//╭──────────┬──────────┬──────────┬──────────┬──────────╮ ╭──────────┬──────────┬──────────┬──────────┬──────────╮
//│  Q       │  W       │  E       │  R       │  T       │ │  Y       │  U       │  I       │  O       │  P       │
    &kp Q      &kp W      &kp E      &kp R      &kp T        &kp Y      &kp U      &kp I      &kp O      &kp P
//├──────────┼──────────┼──────────┼──────────┼──────────┤ ├──────────┼──────────┼──────────┼──────────┼──────────┤
//│  A       │  S       │  D       │  F       │  G       │ │  H       │  J       │  K       │  L       │ BKSP     │
    LNH(A,     S,         D,         F)         &kp G        &kp H      RNH(J,      K,         L,        BKSP)
//├──────────┼──────────┼──────────┼──────────┼──────────┤ ├──────────┼──────────┼──────────┼──────────┼──────────┤
//│  Z       │  X       │  C       │  V       │  B       │ │  N       │  M       │ ,        │ .        │ /        │
// &lht RALT Z &kp X      &kp C      &kp V      &kp B        &kp N      &kp M      &kp COMMA  &kp DOT  &rht RALT FSLH
   &lht RALT Z &kp X      &kp C      &kp V      &kp B        &kp N      &kp M      &kp COMMA  &kp DOT  &rht RALT LS(N7)
//╰──────────┴──────────┴──────────┼──────────┼──────────┤ ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                     LNT(TAB,   SPACE)      RNT(ENTER,  ESC)
//                                 ╰──────────┴──────────╯ ╰──────────┴──────────╯
            >;
        };

        rn1_layer {
            bindings = <
//╭──────────┬──────────┬──────────┬──────────┬──────────╮ ╭──────────┬──────────┬──────────┬──────────┬──────────╮
//│          │          │          │          │          │ │  +       │  7       │  8       │  9       │  ;       │
//  &trans     &trans     &trans     &trans     &trans       &kp PLUS   &kp N7     &kp N8     &kp N9     &kp SEMI
    &trans     &trans     &trans     &trans     &trans       &kp MINUS  &kp N7     &kp N8     &kp N9   &kp LS(COMMA)
//├──────────┼──────────┼──────────┼──────────┼──────────┤ ├──────────┼──────────┼──────────┼──────────┼──────────┤
//│          │          │          │          │          │ │  -       │  4       │  5       │  6       │  :       │
//  &trans     &trans     &trans     &trans     &trans       &kp MINUS  &kp N4     &kp N5     &kp N6    &kp COLON
    &trans     &trans     &trans     &trans     &trans       &kp FSLH   &kp N4     &kp N5     &kp N6    &kp LS(DOT)
//├──────────┼──────────┼──────────┼──────────┼──────────┤ ├──────────┼──────────┼──────────┼──────────┼──────────┤
//│          │          │          │          │          │ │  0       │  1       │  2       │  3       │  \       │
//  &trans     &trans     &trans     &trans     &trans       &kp N0     &kp N1     &kp N2     &kp N3     &kp BSLH
    &trans     &trans     &trans     &trans     &trans       &kp N0     &kp N1     &kp N2     &kp N3     &kp EQUAL
//╰──────────┴──────────┴──────────┼──────────┼──────────┤ ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                     &trans     &trans       &kp ENTER  &kp ESC
//                                 ╰──────────┴──────────╯ ╰──────────┴──────────╯
            >;
        };

        ln1_layer {
            bindings = <
//╭──────────┬──────────┬──────────┬──────────┬──────────╮ ╭──────────┬──────────┬──────────┬──────────┬──────────╮
//│  !       │  @       │  {       │  }       │  =       │ │          │          │          │          │          │
//  &kp EXCL   &kp AT     &kp LBRC   &kp RBRC   &kp EQUAL    &trans     &trans     &trans     &trans     &trans
   &kp LS(N1) &kp RA(N2) &kp RA(N7) &kp RA(N0) &kp LS(N0)    &trans     &trans     &trans     &trans     &trans
//├──────────┼──────────┼──────────┼──────────┼──────────┤ ├──────────┼──────────┼──────────┼──────────┼──────────┤
//│  *       │  "       │  (       │  )       │ $        │ │          │          │          │          │          │
// &kp STAR &kp LS(RA(SQT)) &kp LPAR &kp RPAR  &kp DOLLAR    &trans     &trans     &trans     &trans     &trans
   &kp PIPE   &kp LS(N2) &kp LS(N8) &kp LS(N9) &kp RA(N4)    &trans     &trans     &trans     &trans     &trans
//├──────────┼──────────┼──────────┼──────────┼──────────┤ ├──────────┼──────────┼──────────┼──────────┼──────────┤
//│  %       │  ^       │  [       │  ]       │ _        │ │          │          │          │          │          │
// &kp PRCNT  &en_caret   &kp LBKT   &kp RBKT   &kp UNDER    &trans     &trans     &trans     &trans     &trans
   &kp LS(N5) &no_caret   &kp RA(N8) &kp RA(N9) &kp QMARK    &trans     &trans     &trans     &trans     &trans
//╰──────────┴──────────┴──────────┼──────────┼──────────┤ ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                     &kp TAB    &kp SPACE    &trans     &trans
//                                 ╰──────────┴──────────╯ ╰──────────┴──────────╯
            >;
        };

        n2_layer {
            bindings = <
//╭──────────┬──────────┬──────────┬──────────┬──────────╮ ╭──────────┬──────────┬──────────┬──────────┬──────────╮
//│  |       │  §       │  «       │  »       │  ?       │ │  HOME    │  PGDN    │  PGUP    │  END     │  PRINT   │
// &kp PIPE &kp LS(RA(N5))&kp RA(LBKT)&kp RA(RBKT)&kp QMARK  &kp HOME  &kp PG_DN   &kp PG_UP  &kp END    &kp PSCRN
   &kp GRAVE &kp LS(GRAVE)&kp RA(Z)  &kp RA(X)  &kp UNDER    &kp HOME  &kp PG_DN   &kp PG_UP  &kp END    &kp PSCRN
//├──────────┼──────────┼──────────┼──────────┼──────────┤ ├──────────┼──────────┼──────────┼──────────┼──────────┤
//│  #       │  '       │  <       │  >       │  &       │ │  LEFT    │  UP      │  DOWN    │  RIGHT   │  DEL     │
//  &kp HASH  &kp RA(SQT) &kp LT     &kp GT     &kp AMPS     &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT  &kp DEL
   &kp LS(N3) &kp BSLH &kp RA(LS(Z))&kp RA(LS(X))&kp LS(N6)  &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT  &kp DEL
//├──────────┼──────────┼──────────┼──────────┼──────────┤ ├──────────┼──────────┼──────────┼──────────┼──────────┤
//│  ¨       │  ~       │  `       │  ´       │          │ │  INS     │  WCAPS   │  Æ       │  Ø       │  Å       │
// &en_umlaut  &en_tilde  &en_grave  &en_acute  &trans       &kp INS   &caps_word  &kp RA(Z)  &kp RA(L)  &kp RA(W)
   &no_umlaut  &no_tilde  &no_grave  &no_acute  &trans       &kp INS   &caps_word  &kp SQT    &kp SEMI   &kp LBKT
//╰──────────┴──────────┴──────────┼──────────┼──────────┤ ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                     &kp TAB    &kp SPACE    &kp ENTER  &kp ESC
//                                 ╰──────────┴──────────╯ ╰──────────┴──────────╯
            >;
        };

        nop_layer {
            bindings = <
//╭──────────┬──────────┬──────────┬──────────┬──────────╮ ╭──────────┬──────────┬──────────┬──────────┬──────────╮
//│          │          │          │          │          │ │          │          │          │          │          │
    &none      &none      &none      &none      &none        &none      &none      &none      &none      &none
//├──────────┼──────────┼──────────┼──────────┼──────────┤ ├──────────┼──────────┼──────────┼──────────┼──────────┤
//│          │          │          │          │          │ │          │          │          │          │          │
    &none      &none      &none      &none      &none        &none      &none      &none      &none      &none
//├──────────┼──────────┼──────────┼──────────┼──────────┤ ├──────────┼──────────┼──────────┼──────────┼──────────┤
//│          │          │          │          │          │ │          │          │          │          │          │
    &none      &none      &none      &none      &none        &none      &none      &none      &none      &none
//╰──────────┴──────────┴──────────┼──────────┼──────────┤ ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                     &none      &none        &none      &none
//                                 ╰──────────┴──────────╯ ╰──────────┴──────────╯
            >;
        };
    };
};
