// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MiT

#include "cradio.h"


&caps_word { continue-list = <_UNDER _MINUS BKSP DEL _AE _OE _AA>; };

/ {
    behaviors {
        lht: lht {
            label = "lht";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <350>;
            quick-tap-ms = <150>;
            global-quick-tap;
            hold-trigger-on-release;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <left_half>;
        };
        rht: rht {
            label = "rht";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <350>;
            quick-tap-ms = <150>;
            global-quick-tap;
            hold-trigger-on-release;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <right_half>;
        };
        ht: ht {
            label = "ht";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            bindings = <&kp>, <&kp>;
        };
        _sl_num: _sl_num {
            compatible = "zmk,behavior-tap-dance";
            label = "_sl_num";
            #binding-cells = <0>;
            tapping-term-ms = <600>;
            bindings = <&sl NUM_L>, <&to NUM_L>;
        };
        _s_cword: _s_cword {
            compatible = "zmk,behavior-tap-dance";
            label = "_sl_num";
            #binding-cells = <0>;
            tapping-term-ms = <600>;
            bindings = <&sk LSHIFT>, <&caps_word>, <&none>;
        };
        _slh: _slh {
            compatible = "zmk,behavior-mod-morph";
            label = "_slh";
            #binding-cells = <0>;
            bindings = <&ht _BSLH _FSLH>, <&kp _BSLH>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        _dot: _dot {
            compatible = "zmk,behavior-mod-morph";
            label = "_dot";
            #binding-cells = <0>;
            bindings = <&ht _COLON DOT>, <&kp _COLON>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        _comma: _comma {
            compatible = "zmk,behavior-mod-morph";
            label = "_comma";
            #binding-cells = <0>;
            bindings = <&ht _SEMI COMMA>, <&kp _SEMI>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };
    combos {
        compatible = "zmk,combos";
        combo_lock {
            timeout-ms = <50>;
            key-positions = <1 2 3>;
            bindings = <&to LOC_L>;
            layers = <0>;
        };
        combo_unlock {
            timeout-ms = <50>;
            key-positions = <1 2 3>;
            bindings = <&to HOM_L>;
            layers = <4>;
        };
    };
    keymap {
        compatible = "zmk,keymap";
        hom_l { bindings = <
//  ╭────────┬────────┬────────┬────────┬────────╮ ╭────────┬────────┬────────┬────────┬────────╮
top(  Q,       W,       E,       R,       T,         Y,       U,       I,       O,       P       )
mid(  A,       S,       D,       F,       G,         H,       J,       K,       L,       BKSP    )
      &kp Z    &kp X    &kp C    &kp V    &kp B      &kp N    &kp M    &_comma  &_dot    &_slh
//  ╰────────┴────────┼────────┴───┬────┴────────┤ ├────────┴───┬────┴────────┼────────┴────────╯
                        &_s_cword     _m_space        &sl NUM_L    &sl NAV_L
        >; };
        num_l { bindings = <
//  ╭────────┬────────┬────────┬────────┬────────╮ ╭────────┬────────┬────────┬────────┬────────╮
top(  _EXCL,   _AT,     _LBRC,   _RBRC,   _EQUAL,    _PLUS,   N7,      N8,      N9,      _AA     )
mid(  _STAR,   _DQT,    _LPAR,   _RPAR,   _DOLLAR,   _MINUS,  N4,      N5,      N6,      _OE     )
bot(  _PRCNT,  _CARET,  _LBKT,   _RBKT,   _UNDER,    N0,      N1,      N2,      N3,      _AE     )
//  ╰────────┴────────┼────────┴───┬────┴────────┤ ├────────┴───┬────┴────────┼────────┴────────╯
                        &sk LSHIFT   _m_enter        &kp ESC      &none
        >; };
        nav_l { bindings = <
//  ╭────────┬────────┬────────┬────────┬────────╮ ╭────────┬────────┬────────┬────────┬────────╮
top(  _PIPE,   _PARA,   _LDANG,  _RDANG,  _QMARK,    HOME,    PG_DN,   PG_UP,   END,     LS(_AA) )
mid(  _HASH,   _SQT,    _LT,     _GT,     _AMPS,     LEFT,    DOWN,    UP,      RIGHT,   LS(_OE) )
bot(  _EURO,   _TILDE,  _GRAVE,  _ACUTE,  _PRCNT,    DEL,     INS,     PSCRN,   &none,   LS(_AE) )
//  ╰────────┴────────┼────────┴───┬────┴────────┤ ├────────┴───┬────┴────────┼────────┴────────╯
                        &sk LSHIFT   &sk LGUI        &none        &kp TAB
        >; };
        loc_l { bindings = <
//  ╭────────┬────────┬────────┬────────┬────────╮ ╭────────┬────────┬────────┬────────┬────────╮
      &none    &none    &none    &none    &none      &none    &none    &none    &none    &none
      &none    &none    &none    &none    &none      &none    &none    &none    &none    &none
      &none    &none    &none    &none    &none      &none    &none    &none    &none    &none
//  ╰────────┴────────┼────────┴───┬────┴────────┤ ├────────┴───┬────┴────────┼────────┴────────╯
                        &none        &none           &none        &none
        >; };
    };
};
