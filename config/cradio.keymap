// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

#define _HOME 0
#define _NUM1 1
#define _NUM2 2
#define _SHIFT 3
#define _N1 4
#define _N2 5
#define _NOP 6

// (Left|Right) (Norwegian|English) (Home|Thumb) row mods
#define LN1(k1,k2,k3,k4) &lht LALT k1  &lht LGUI k2  &lht LCTRL k3  &llt _N1 k4
#define RN1(k1,k2,k3,k4) &rlt _N1 k1  &rht LCTRL k2  &rht LGUI k3  &rht LALT k4
#define LN2(k1,k2,k3,k4) &lht LALT k1  &lht LGUI k2  &lht LCTRL k3  &llt _N2 k4
#define RN2(k1,k2,k3,k4) &rlt _N2 k1  &rht LCTRL k2  &rht LGUI k3  &rht LALT k4

&caps_word {
    continue-list = <UNDERSCORE MINUS QMARK FSLH BKSP DEL>;
};

/ {
    behaviors {
        llt: left_layer_tap {
            label = "left_layer_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&mo>, <&kp>;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 30 31 32 33>;
        };
        rlt: right_layer_tap {
            label = "right_layer_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&mo>, <&kp>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32 33>;
        };
        lht: left_hold_tap {
            label = "left_hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 32 33>;
        };
        rht: right_hold_tap {
            label = "right_hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31>;
        };
        slash_slash: slash_slash {
            compatible = "zmk,behavior-mod-morph";
            label = "slash_slash";
            #binding-cells = <0>;
            bindings = <&rht RALT LS(N7)>, <&rht RALT EQUAL>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    combos {
        compatible = "zmk,combos";
        combo_lock {
            timeout-ms = <50>;
            key-positions = <0 1 2>;
            bindings = <&to _NOP>;
            layers = <0>;
        };
        combo_unlock {
            timeout-ms = <50>;
            key-positions = <0 1 2>;
            bindings = <&to _HOME>;
            layers = <5>;
        };
        n2_trigger1 {
            timeout-ms = <150>;
            key-positions = <13 31>;
            bindings = <&mo _N2>;
            layers = <0>;
        };
        n2_trigger2 {
            timeout-ms = <150>;
            key-positions = <16 32>;
            bindings = <&mo _N2>;
            layers = <0>;
        };
    };

    macros {
        _s2: sllt {
            label = "shifted_n2_layer";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &mo _N2 &kp LSHFT>
                       , <&macro_pause_for_release>
                       , <&macro_release &mo _N2 &kp LSHFT>;
        };
        caret: caret {
            label = "caret";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp RBRC &kp RBRC>;
        };
        grave: grave {
            label = "grave";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            //bindings = <&macro_tap &kp GRAVE &kp GRAVE>;
            bindings = <&macro_tap &kp LS(EQUAL) &kp LS(EQUAL)>;
        };
        tilde: tilde {
            label = "tilde";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            //bindings = <&macro_tap &kp LS(GRAVE) &kp LS(GRAVE)>;
            bindings = <&macro_tap &kp RA(RBKT) &kp RA(RBKT)>;
        };
        acute: acute {
            label = "acute";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            //bindings = <&macro_tap &kp SQT &kp SQT>;
            bindings = <&macro_tap &kp RA(EQUAL) &kp RA(EQUAL)>;
        };
        umlaut: umlaut {
            label = "umlaut";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            //bindings = <&macro_tap &kp DQT &kp DQT>;
            bindings = <&macro_tap &kp RA(LBKT) &kp RA(LBKT)>;
        };
        m0: m0 {
            label = "m0";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp N0 &sl _NUM2>;
        };
        m1: m1 {
            label = "m1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp N1 &sl _NUM2>;
        };
        m2: m2 {
            label = "m2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp N2 &sl _NUM2>;
        };
        m3: m3 {
            label = "m3";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp N3 &sl _NUM2>;
        };
        m4: m4 {
            label = "m4";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp N4 &sl _NUM2>;
        };
        m5: m5 {
            label = "m5";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp N5 &sl _NUM2>;
        };
        m6: m6 {
            label = "m6";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp N6 &sl _NUM2>;
        };
        m7: m7 {
            label = "m7";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp N7 &sl _NUM2>;
        };
        m8: m8 {
            label = "m8";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp N8 &sl _NUM2>;
        };
        m9: m9 {
            label = "m9";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp N9 &sl _NUM2>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        home_layer {
            bindings = <
//╭──────────┬──────────┬──────────┬──────────┬──────────╮ ╭──────────┬──────────┬──────────┬──────────┬──────────╮
//│  q       │  w       │  e       │  r       │  t       │ │  y       │  u       │  i       │  o       │  p       │
    &kp Q      &kp W      &kp E      &kp R      &kp T        &kp Y      &kp U      &kp I      &kp O      &kp P
//├──────────┼──────────┼──────────┼──────────┼──────────┤ ├──────────┼──────────┼──────────┼──────────┼──────────┤
//│  a       │  s       │  d       │  f       │  g       │ │  h       │  j       │  k       │  l       │  BKSP    │
    LN1(A,     S,         D,         F)         &kp G        &kp H      RN1(J,     K,         L,         BKSP)
//├──────────┼──────────┼──────────┼──────────┼──────────┤ ├──────────┼──────────┼──────────┼──────────┼──────────┤
//│  z       │  x       │  c       │  v       │  b       │ │  n       │  m       │  ,       │  .       │  /       │
// &lht RALT Z &kp X      &kp C      &kp V      &kp B        &kp N      &kp M      &kp COMMA  &kp DOT  &rht RALT FSLH
   &lht RALT Z &kp X      &kp C      &kp V      &kp B        &kp N      &kp M      &kp COMMA  &kp DOT  &slash_slash
//╰──────────┴──────────┴──────────┼──────────┼──────────┤ ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                    &sl _SHIFT &llt _SHIFT SPACE  &rlt _SHIFT ESC &sl _NUM1
//                                 ╰──────────┴──────────╯ ╰──────────┴──────────╯
            >;
        };

        num1_layer {
            bindings = <
//╭──────────┬──────────┬──────────┬──────────┬──────────╮ ╭──────────┬──────────┬──────────┬──────────┬──────────╮
//│          │          │          │          │          │ │          │  7       │  8       │  9       │          │
    &trans     &trans     &trans     &trans     &trans       &trans     &kp N7     &kp N8     &kp N9     &trans
//├──────────┼──────────┼──────────┼──────────┼──────────┤ ├──────────┼──────────┼──────────┼──────────┼──────────┤
//│          │          │          │          │          │ │          │  4       │  5       │  6       │          │
    &trans     &trans     &trans     &trans     &trans       &trans     &kp N4     &kp N5     &kp N6     &trans
//├──────────┼──────────┼──────────┼──────────┼──────────┤ ├──────────┼──────────┼──────────┼──────────┼──────────┤
//│          │          │          │          │          │ │  0       │  1       │  2       │  3       │          │
    &trans     &trans     &trans     &trans     &trans       &m0        &kp N1     &kp N2     &kp N3     &trans
//╰──────────┴──────────┴──────────┼──────────┼──────────┤ ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                     &trans     &trans       &trans     &sl _NUM2
//                                 ╰──────────┴──────────╯ ╰──────────┴──────────╯
            >;
        };

        num2_layer {
            bindings = <
//╭──────────┬──────────┬──────────┬──────────┬──────────╮ ╭──────────┬──────────┬──────────┬──────────┬──────────╮
//│          │          │          │          │          │ │          │  7       │  8       │  9       │          │
    &trans     &trans     &trans     &trans     &trans       &trans     &m7        &m8        &m9        &trans
//├──────────┼──────────┼──────────┼──────────┼──────────┤ ├──────────┼──────────┼──────────┼──────────┼──────────┤
//│          │          │          │          │          │ │          │  4       │  5       │  6       │          │
    &trans     &trans     &trans     &trans     &trans       &trans     &m4        &m5        &m6        &trans
//├──────────┼──────────┼──────────┼──────────┼──────────┤ ├──────────┼──────────┼──────────┼──────────┼──────────┤
//│          │          │          │          │          │ │  0       │  1       │  2       │  3       │          │
    &trans     &trans     &trans     &trans     &trans       &m0        &m1        &m2        &m3        &trans
//╰──────────┴──────────┴──────────┼──────────┼──────────┤ ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                     &trans     &trans       &trans     &to _HOME
//                                 ╰──────────┴──────────╯ ╰──────────┴──────────╯
            >;
        };

        shift_layer {
            bindings = <
//╭──────────┬──────────┬──────────┬──────────┬──────────╮ ╭──────────┬──────────┬──────────┬──────────┬──────────╮
//│  Q       │  W       │  E       │  R       │  T       │ │  Y       │  U       │  I       │  O       │  P       │
    &kp LS(Q)  &kp LS(W)  &kp LS(E)  &kp LS(R)  &kp LS(T)    &kp LS(Y)  &kp LS(U)  &kp LS(I)  &kp LS(O)  &kp LS(P)
//├──────────┼──────────┼──────────┼──────────┼──────────┤ ├──────────┼──────────┼──────────┼──────────┼──────────┤
//│  A       │  S       │  D       │  F       │  G       │ │  H       │  J       │  K       │  L       │  BKSP    │
   LN2(LS(A),  LS(S),     LS(D),     LS(F))     &kp LS(G)    &kp LS(H) RN2(LS(J),  LS(K),     LS(L),     LS(BKSP))
//├──────────┼──────────┼──────────┼──────────┼──────────┤ ├──────────┼──────────┼──────────┼──────────┼──────────┤
//│  Z       │  X       │  C       │  V       │  B       │ │  N       │  M       │  ;       │  :       │  \       │
// &lht RALT Z &kp X      &kp C      &kp V      &kp B        &kp N      &kp M      &kp SEMI  &kp COLON  &rht RALT BSLH
 &lht RALT LS(Z) &kp LS(X) &kp LS(C)  &kp LS(V)  &kp LS(B)  &kp LS(N)  &kp LS(M) &kp LS(COMMA) &kp LS(DOT) &rht RALT EQUAL
//╰──────────┴──────────┴──────────┼──────────┼──────────┤ ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                    &caps_word &llt _N2 LS(SPACE)  &rlt _N2 LS(ESC) &none
//                                 ╰──────────┴──────────╯ ╰──────────┴──────────╯
            >;
        };

        n1_layer {
            bindings = <
//╭──────────┬──────────┬──────────┬──────────┬──────────╮ ╭──────────┬──────────┬──────────┬──────────┬──────────╮
//│  !       │  @       │  {       │  }       │  =       │ │  +       │  7       │  8       │  9       │  å       │
//  &kp EXCL   &kp AT     &kp LBRC   &kp RBRC   &kp EQUAL    &kp PLUS   &kp N7     &kp N8     &kp N9     &kp RA(W)
   &kp LS(N1) &kp RA(N2) &kp RA(N7) &kp RA(N0) &kp LS(N0)    &kp MINUS  &kp N7     &kp N8     &kp N9     &kp LBKT
//├──────────┼──────────┼──────────┼──────────┼──────────┤ ├──────────┼──────────┼──────────┼──────────┼──────────┤
//│  *       │  "       │  (       │  )       │ $        │ │  -       │  4       │  5       │  6       │  ø       │
// &kp STAR &kp LS(RA(SQT)) &kp LPAR &kp RPAR  &kp DOLLAR    &kp MINUS  &kp N4     &kp N5     &kp N6     &kp RA(L)
   LN1(PIPE,   LS(N2),    LS(N8),    LS(N9))   &kp RA(N4)    &kp FSLH   RN1(N4,    N5,        N6,        SEMI)
//├──────────┼──────────┼──────────┼──────────┼──────────┤ ├──────────┼──────────┼──────────┼──────────┼──────────┤
//│  %       │  ^       │  [       │  ]       │ _        │ │  0       │  1       │  2       │  3       │  æ       │
//  &kp PRCNT  &caret     &kp LBKT   &kp RBKT   &kp UNDER    &kp N0     &kp N1     &kp N2     &kp N3     &kp RA(Z)
    &kp LS(N5) &caret     &kp RA(N8) &kp RA(N9) &kp QMARK    &kp N0     &kp N1     &kp N2     &kp N3     &kp SQT
//╰──────────┴──────────┴──────────┼──────────┼──────────┤ ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                    &none &llt _N2 TAB  &rlt _N2 ENTER &none
//                                 ╰──────────┴──────────╯ ╰──────────┴──────────╯
            >;
        };

        n2_layer {
            bindings = <
//╭──────────┬──────────┬──────────┬──────────┬──────────╮ ╭──────────┬──────────┬──────────┬──────────┬──────────╮
//│  |       │  §       │  «       │  »       │  ?       │ │  HOME    │  PGDN    │  PGUP    │  END     │  Å       │
// &kp PIPE &kp LS(RA(N5))&kp RA(LBKT)&kp RA(RBKT)&kp QMARK  &kp HOME  &kp PG_DN   &kp PG_UP  &kp END    &kp LS(RA(W))
   &kp GRAVE &kp LS(GRAVE)&kp RA(Z)  &kp RA(X)  &kp UNDER    &kp HOME  &kp PG_DN   &kp PG_UP  &kp END    &kp LS(LBKT)
//├──────────┼──────────┼──────────┼──────────┼──────────┤ ├──────────┼──────────┼──────────┼──────────┼──────────┤
//│  #       │  '       │  <       │  >       │  &       │ │  LEFT    │  UP      │  DOWN    │  RIGHT   │  Ø       │
//  &kp HASH  &kp RA(SQT) &kp LT     &kp GT     &kp AMPS     &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT  &kp LS(RA(L))
   LN2(LS(N3), BSLH,     RA(LS(Z)), RA(LS(X))) &kp LS(N6)    &kp LEFT   RN2(DOWN,  UP,        RIGHT,     LS(SEMI))
//├──────────┼──────────┼──────────┼──────────┼──────────┤ ├──────────┼──────────┼──────────┼──────────┼──────────┤
//│  ¨       │  ~       │  `       │  ´       │  €       │ │  INS     │  DEL     │  PRINT   │          │  Æ       │
//  &umlaut    &tilde     &grave     &acute     &kp RA(E)    &kp INS    &kp DEL    &kp PSCRN  &none      &kp LS(RA(Z))
    &umlaut    &tilde     &grave     &acute     &kp RA(E)    &kp INS    &kp DEL    &kp PSCRN  &none      &kp LS(SQT)
//╰──────────┴──────────┴──────────┼──────────┼──────────┤ ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                    &none &kp LSHIFT &kp LSHIFT &none
//                                 ╰──────────┴──────────╯ ╰──────────┴──────────╯
            >;
        };

        nop_layer {
            bindings = <
//╭──────────┬──────────┬──────────┬──────────┬──────────╮ ╭──────────┬──────────┬──────────┬──────────┬──────────╮
//│          │          │          │          │          │ │          │          │          │          │          │
    &none      &none      &none      &none      &none        &none      &none      &none      &none      &none
//├──────────┼──────────┼──────────┼──────────┼──────────┤ ├──────────┼──────────┼──────────┼──────────┼──────────┤
//│          │          │          │          │          │ │          │          │          │          │          │
    &none      &none      &none      &none      &none        &none      &none      &none      &none      &none
//├──────────┼──────────┼──────────┼──────────┼──────────┤ ├──────────┼──────────┼──────────┼──────────┼──────────┤
//│          │          │          │          │          │ │          │          │          │          │          │
    &none      &none      &none      &none      &none        &none      &none      &none      &none      &none
//╰──────────┴──────────┴──────────┼──────────┼──────────┤ ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                     &none      &none        &none      &none
//                                 ╰──────────┴──────────╯ ╰──────────┴──────────╯
            >;
        };

    };
};
