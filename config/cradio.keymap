// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MiT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

#include "cradio.h"
#include "no_nb.h"


&caps_word {
    continue-list = <_UNDER _MINUS BKSP DEL _AE _OE _AA>;
};

/ {
    behaviors {
        lht: lht {
            label = "lht";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <350>;
            quick-tap-ms = <150>;
            global-quick-tap;
            hold-trigger-on-release;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <left_half>;
        };
        rht: rht {
            label = "rht";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <350>;
            quick-tap-ms = <150>;
            global-quick-tap;
            hold-trigger-on-release;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <right_half>;
        };

        _num_layer: _num_layer {
            compatible = "zmk,behavior-tap-dance";
            label = "_num_layer";
            #binding-cells = <0>;
            tapping-term-ms = <600>;
            bindings = <&sl NUM_L>, <&to NUM_L>;
        };

    };

    combos {
        compatible = "zmk,combos";
        combo_lock {
            timeout-ms = <50>;
            key-positions = <1 2 3>;
            bindings = <&to LOC_L>;
            layers = <0>;
        };
        combo_unlock {
            timeout-ms = <50>;
            key-positions = <1 2 3>;
            bindings = <&to HOM_L>;
            layers = <4>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        home_layer {
            bindings = <
//╭──────────┬──────────┬──────────┬──────────┬──────────╮ ╭──────────┬──────────┬──────────┬──────────┬──────────╮
//│  q       │  w       │  e       │  r       │  t       │ │  y       │  u       │  i       │  o       │  p       │
    // &kp Q      &kp W      &kp E      &kp R      &kp T        &kp Y      &kp U      &kp I      &kp O      &kp P
    top(Q, W, E, R, T, Y, U, I, O, P)
//╭──────────┬──────────┬──────────┬──────────┬──────────╮ ╭──────────┬──────────┬──────────┬──────────┬──────────╮
//│  a       │  s       │  d       │  f       │  g       │ │  h       │  j       │  k       │  l       │  BKSP    │
    // &kp A      lg(S)      la(D)      lc(F)      &kp G        &kp H      rc(J)      ra(K)      rg(L)      &kp BKSP
    mid(A, S, D, F, G, H, J, K, L, BKSP)
//╭──────────┬──────────┬──────────┬──────────┬──────────╮ ╭──────────┬──────────┬──────────┬──────────┬──────────╮
//│  z       │  x       │  c       │  v       │  b       │ │  n       │  m       │  ,;      │  .:      │  /       │
    // &kp Z      &kp X      &kp C      &kp V      &kp B        &kp N      &kp M     &kp COMMA   &kp DOT    &kp _FSLH
    bot(Z, X, C, V, B, N, M, COMMA, DOT, _FSLH)
//                      ╭───────────────┬────────────────╮ ╭────────────────┬───────────────╮
                          &sl CAP_L       lm(SPACE)          &_num_layer      &sl NAV_L
            >;
        };

        shift_layer {
            bindings = <
//╭──────────┬──────────┬──────────┬──────────┬──────────╮ ╭──────────┬──────────┬──────────┬──────────┬──────────╮
//│  Q       │  W       │  E       │  R       │  T       │ │  Y       │  U       │  I       │  O       │  P       │
    &kp LS(Q)  &kp LS(W)  &kp LS(E)  &kp LS(R)  &kp LS(T)    &kp LS(Y)  &kp LS(U)  &kp LS(I)  &kp LS(O)  &kp LS(P)
//╭──────────┬──────────┬──────────┬──────────┬──────────╮ ╭──────────┬──────────┬──────────┬──────────┬──────────╮
//│  A       │  S       │  D       │  F       │  G       │ │  H       │  J       │  K       │  L       │  SBKSP   │
    &kp LS(A)  lg(LS(S))  la(LS(D))  lc(LS(F))  &kp LS(G)    &kp LS(H)  rc(LS(J))  ra(LS(K))  rg(LS(L))  &kp LS(BKSP)
//╭──────────┬──────────┬──────────┬──────────┬──────────╮ ╭──────────┬──────────┬──────────┬──────────┬──────────╮
//│  Z       │  X       │  C       │  V       │  B       │ │  N       │  M       │  ;       │  :       │  SENTER  │
    &kp LS(Z)  &kp LS(X)  &kp LS(C)  &kp LS(V)  &kp LS(B)    &kp LS(N)  &kp LS(M)  &kp _SEMI  &kp _COLON &kp LS(_EURO)
//                      ╭───────────────┬────────────────╮ ╭────────────────┬───────────────╮
                          &caps_word      lm(LS(SPACE))      &sl NUM_L        &sl NAV_L // TODO: sl+LSHIFT macro
            >;
        };

        num_layer {
            bindings = <
//╭──────────┬──────────┬──────────┬──────────┬──────────╮ ╭──────────┬──────────┬──────────┬──────────┬──────────╮
//│  !       │  @       │  {       │  }       │  =       │ │  +       │  7       │  8       │  9       │  å       │
    &kp _EXCL  &kp _AT    &kp _LBRC  &kp _RBRC  &kp _EQUAL   &kp _PLUS  &kp N7     &kp N8     &kp N9     &kp _AA
//╭──────────┬──────────┬──────────┬──────────┬──────────╮ ╭──────────┬──────────┬──────────┬──────────┬──────────╮
//│  *       │  "       │  (       │  )       │  $       │ │  -       │  4       │  5       │  6       │  ø       │
    &kp _STAR  lg(_DQT)   la(_LPAR)  lc(_RPAR)  &kp _DOLLAR  &kp _MINUS rc(N4)     ra(N5)     rg(N6)     &kp _OE
//╭──────────┬──────────┬──────────┬──────────┬──────────╮ ╭──────────┬──────────┬──────────┬──────────┬──────────╮
//│  /       │  ^       │  [       │  ]       │  _       │ │  0       │  1       │  2       │  3       │  æ       │
    &kp _FSLH  &kp _CARET &kp _LBKT  &kp _RBKT  &kp _UNDER   &kp N0     &kp N1     &kp N2     &kp N3  &kp _AE
//                      ╭───────────────┬────────────────╮ ╭────────────────┬───────────────╮
                          &to CAP_L       &to HOM_L          &none            &to NAV_L
            >;
        };

        nav_layer {
            bindings = <
//╭──────────┬──────────┬──────────┬──────────┬──────────╮ ╭──────────┬──────────┬──────────┬──────────┬──────────╮
//│  |       │  §       │  «       │  »       │  ?       │ │  HOME    │  PGDN    │  PGUP    │  END     │  Å       │
    &kp _PIPE  &kp _PARA  &kp _LDANG &kp _RDANG &kp _QMARK   &kp HOME  &kp PG_DN   &kp PG_UP  &kp END    &kp LS(_AA)
//╭──────────┬──────────┬──────────┬──────────┬──────────╮ ╭──────────┬──────────┬──────────┬──────────┬──────────╮
//│  \#      │  '       │  <       │  >       │  &       │ │  LEFT    │  UP      │  DOWN    │  RIGHT   │  Ø       │
    &kp _HASH  lg(_SQT)   la(_LT)    lc(_GT)    &kp _AMPS    &kp LEFT   rc(DOWN)   ra(UP)     rg(RIGHT)  &kp LS(_OE)
//╭──────────┬──────────┬──────────┬──────────┬──────────╮ ╭──────────┬──────────┬──────────┬──────────┬──────────╮
//│  \\      │  ~       │  `       │  ´       │  %       │ │  INS     │  DEL     │  PRINT   │          │  Æ       │
   &kp _BSLH   &kp _TILDE &kp _GRAVE &kp _ACUTE &kp _PRCNT   &kp INS    &kp DEL    &kp PSCRN  &none      &kp LS(_AE)
//                      ╭───────────────┬────────────────╮ ╭────────────────┬───────────────╮
                          ls(ENTER)       lm(TAB)            &to HOM_L        &kp ESC
               >;
           };

        lock_layer {
            bindings = <
//╭──────────┬──────────┬──────────┬──────────┬──────────╮ ╭──────────┬──────────┬──────────┬──────────┬──────────╮
    &none      &none      &none      &none      &none        &none      &none      &none      &none      &none
//╭──────────┬──────────┬──────────┬──────────┬──────────╮ ╭──────────┬──────────┬──────────┬──────────┬──────────╮
    &none      &none      &none      &none      &none        &none      &none      &none      &none      &none
//╭──────────┬──────────┬──────────┬──────────┬──────────╮ ╭──────────┬──────────┬──────────┬──────────┬──────────╮
    &none      &none      &none      &none      &none        &none      &none      &none      &none      &none
//                      ╭───────────────┬────────────────╮ ╭────────────────┬───────────────╮
                          &none           &none              &none            &none
            >;
        };

    };
};
